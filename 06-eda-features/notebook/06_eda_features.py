# -*- coding: utf-8 -*-
"""06_eda_featuresVF.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14MQxHNa7mC75nsbr5aV0_bkXqx-UaaH7

# EDA on Engineered Features

This notebook explores the engineered features used for fake review detection and rating prediction. It helps validate assumptions, identify patterns, and prepare for modeling.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_parquet("/content/engineered_features.parquet")
print("Data loaded:", df.shape)

features_to_plot = [
    'review_length', 'sentiment_polarity', 'username_dup_flag',
    'product_name_match_flag', 'unrelated_product_flag', 'semantic_mismatch_score'
]

for feature in features_to_plot:
    plt.figure(figsize=(8, 4))
    sns.histplot(df[feature], bins=30, kde=True)
    plt.title(f"Distribution of {feature}")
    plt.xlabel(feature)
    plt.ylabel("Frequency")
    plt.show()

corr = df[features_to_plot + ['fake_review_label']].corr()
plt.figure(figsize=(10, 6))
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title("Feature Correlation Matrix")
plt.show()

for feature in features_to_plot:
    plt.figure(figsize=(8, 4))
    sns.boxplot(x='fake_review_label', y=feature, data=df)
    plt.title(f"{feature} by Fake Review Label")
    plt.show()

sns.countplot(x='fake_review_label', data=df)
plt.title("Fake Review Label Distribution")
plt.xlabel("Label (0 = genuine, 1 = fake)")
plt.ylabel("Count")
plt.show()

from sklearn.ensemble import RandomForestClassifier

X = df[features_to_plot]
y = df['fake_review_label']

model = RandomForestClassifier()
model.fit(X, y)

importances = pd.Series(model.feature_importances_, index=X.columns)
importances.sort_values().plot(kind='barh', figsize=(8, 6), title="Feature Importance")
plt.show()